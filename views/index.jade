html
    head
        title Scorll
        - if (release)
            link(rel="stylesheet", rel="stylesheet", href="/release/#{revision}/dijit/themes/claro/claro.css")
        - else
            link(rel="stylesheet", rel="stylesheet", href="/dijit/themes/claro/claro.css")
        link(type="text/css", rel="stylesheet", href="/css/main.css") 
        link(type="text/css", rel="stylesheet", href="/css/stage.css") 
    body.claro
        div#stage-container
            h1#title Loading...
            div#stage
            div
                div#newAssetButton(dojoType="dijit.form.Button") Add New Asset
        div#newAssetDialog(dojoType="dijit.Dialog", title="Add New Asset", style="width: 300px;")
        - if (release)
            script(src="/release/#{revision}/dojo/dojo.js", type="text/javascript", djConfig="parseOnLoad: true")
            script(src="/release/#{revision}/dojo/scorll.js", type="text/javascript", djConfig="parseOnLoad: true")
        - else
            script(src="/dojo/dojo.js", type="text/javascript", djConfig="parseOnLoad: true")
        script(src="/socket.io/socket.io.js")
        script(type="text/javascript", language="javascript")
            // <![CDATA[
            dojo.require("dojo.store.Memory");
            dojo.require("dijit.form.Button");
            dojo.require("dijit.Dialog");
            dojo.require("dijit.TitlePane");
            dojo.require("dojo.dnd.Source");

            dojo.require("scorll.content.Content");
            dojo.require("scorll.net.Client");
            dojo.require("scorll.net.User");
            dojo.require("scorll.stage.Stage");
            dojo.require("scorll.asset.AssetManager");
            dojo.addOnLoad(
                function() {
                    var clientArgs = {
                        groupId: '#{contentId}'
                    };
                    var contentArgs = {
                        id: '#{contentId}'
                    };
                    var args = {
                        client: new scorll.net.Client(clientArgs),
                        user: new scorll.net.User(),
                        content: new scorll.content.Content(contentArgs),
                        requireLogin: false,
                    };
                    var stage = new scorll.stage.Stage(args);
                    var newAssetButon = dijit.byId("newAssetButton");
                    dojo.connect(newAssetButon, "onClick", function() {
                        var newAssetButton = this;
                        dojo.fadeOut({node: newAssetButton.domNode}).play();
                        var container = new dijit.TitlePane({title: "Asset Types", toggleable: false});
                        dojo.destroy(container.arrowNode);
                        container.placeAt(dojo.byId("stage"));
                        container.startup();
                        var assetManager = new scorll.asset.AssetManager();
                        for(var type in assetManager.assets) {
                            var button = new dijit.form.Button();
                            var label = assetManager.assets[type].label;
                            button.attr('label',label);
                            button.widgetType = type;
                            dojo.connect(button,"onClick",function() {
                                container.attr('title', this.attr('label'));
                                var form = assetManager.getAssetForm({type: this.widgetType});
                                dojo.place(form.domNode, container.containerNode, "only");
                                dojo.connect(form,"onSubmit",function(item) {
                                    dojo.fadeIn({node: newAssetButton.domNode}).play();
                                    stage.content.add(item);
                                    container.destroyRecursive();
                                });
                                dojo.connect(form,"onCancel",function() {
                                    dojo.fadeIn({node: newAssetButton.domNode}).play();
                                    container.destroyRecursive();
                                });
                            });
                            button.placeAt(container.containerNode);
                        }
                    });
                }
            );
            // ]]>
